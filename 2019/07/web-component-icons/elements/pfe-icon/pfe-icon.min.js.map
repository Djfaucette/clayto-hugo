{"version":3,"file":"pfe-icon.min.js","sources":["pfe-icon.js"],"sourcesContent":["import PFElement from '../pfelement/pfelement.js';\n\nclass PfeIconSet {\n  /**\n   * Run the icon set's name resolver to turn an icon name into an icon path, id, etc.\n   */\n  resolveIconName(iconName) {\n    return this._resolveIconName(iconName, this.name, this.path);\n  }\n\n  /**\n   * Create a new icon set.  Icon sets have a name (ie, a namespace).  For\n   * example, an icon with a name of \"rh-logo\" represents a \"logo\" icon from the\n   * \"rh\" set.  Icon set names are always separated from the rest of the icon\n   * name with a hyphen `-`.  This means that set names cannot contain a hyphen.\n   *\n   * @param {String} name the namespace of the icon set\n   * @param {String} path the web-accessible path to the icon set (for instance, a CDN)\n   * @param {Function} resolveIconName an optional function to combine the path and an icon name into a final path.  The function will be passed the namespaced icon name (for example, \"rh-api\" where rh is the namespace and api is the individual icon's name)\n   * @returns {Object} an object with the status of the icon set installation, such as `{ result: true, text: 'icon set installed' }` or `{ result: false, text: 'icon set is already installed' }`\n   */\n  constructor(name, path, resolveIconName) {\n    this.name = name;\n    this.path = path;\n    this._resolveIconName = resolveIconName;\n  }\n}\n\n/**\n * An icon name resolver for the PFE built-in icon sets.\n */\nfunction resolveIconName(name, iconSetName, iconSetPath) {\n  const [, , iconName] = /^([^-]+)-(.*)/.exec(name);\n\n  const iconId = `${iconSetName}-icon-${iconName}`;\n  const iconPath = `${iconSetPath}/${iconId}.svg`;\n\n  return {\n    iconSetName,\n    iconName,\n    iconId,\n    iconPath\n  };\n}\n\n/**\n * An 'init' function to add the PFE built-in icon sets to the current page.\n */\nfunction addBuiltIns(PfeIcon) {\n  [\n    {\n      name: \"web\",\n      path: \"https://access.redhat.com/webassets/avalon/j/lib/rh-iconfont-svgs\"\n    },\n    {\n      name: \"rh\",\n      path: \"https://access.redhat.com/webassets/avalon/j/lib/rh-iconfont-svgs\"\n    }\n  ].forEach(set => PfeIcon.addIconSet(set.name, set.path, resolveIconName));\n}\n\n/*!\n * PatternFly Elements: PfeIcon 1.0.0-prerelease.19\n * @license\n * Copyright 2019 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nclass PfeIcon extends PFElement {\n  static get version() {\n    return \"1.0.0-prerelease.19\";\n  }\n\n  get html() {\n    return `<style>:host{--pfe-icon--spacing:var(--pfe-theme--container-spacer, 1rem);--pfe-icon--size:var(--pfe-theme--icon-size, 1em);--pfe-icon--color--bg:transparent;--pfe-icon--color--border:transparent;display:inline-block;vertical-align:middle;border-radius:50%;background-color:var(--pfe-icon--color--bg);border:var(--pfe-icon--color--border);position:relative}:host,:host svg{width:1em;height:1em}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){:host{background-color:#fff!important}:host svg filter feFlood{flood-color:#000!important}}@supports (-ms-accelerator:true){:host{background-color:#fff!important}:host svg filter feFlood{flood-color:#000!important}}@supports (-ms-ime-align:auto){:host{background-color:#fff!important}:host svg filter feFlood{flood-color:#000!important}}:host([data-block]){display:block;margin-bottom:var(--pfe-icon--spacing);margin-top:var(--pfe-icon--spacing)}:host([data-block]):first-child{margin-top:0}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){:host svg image{-webkit-filter:none;filter:none}}:host svg image.load-failed{display:none}:host svg filter feFlood{flood-color:var(--pfe-broadcasted--color--text)}:host([size=\"2x\"]),:host([size=\"2x\"]) svg{width:2em;height:2em}:host([size=\"3x\"]),:host([size=\"3x\"]) svg{width:3em;height:3em}:host([size=\"4x\"]),:host([size=\"4x\"]) svg{width:4em;height:4em}:host([size=xl]),:host([size=xl]) svg{width:100px;height:100px}:host([size=lg]),:host([size=lg]) svg{width:64px;height:64px}:host([size=md]),:host([size=md]) svg{width:32px;height:32px}:host([size=sm]),:host([size=sm]) svg{width:14px;height:14px}:host([color=base]){--pfe-broadcasted--color--text:var(--pfe-theme--color--ui-base, #0477a4)}:host([color=complement]){--pfe-broadcasted--color--text:var(--pfe-theme--color--ui-complement, #464646)}:host([color=accent]){--pfe-broadcasted--color--text:var(--pfe-theme--color--ui-accent, #fe460d)}:host([color=critical]){--pfe-broadcasted--color--text:var(--pfe-theme--color--feedback--critical, #bb0000)}:host([color=important]){--pfe-broadcasted--color--text:var(--pfe-theme--color--feedback--important, #d73401)}:host([color=moderate]){--pfe-broadcasted--color--text:var(--pfe-theme--color--feedback--moderate, #ffc024)}:host([color=success]){--pfe-broadcasted--color--text:var(--pfe-theme--color--feedback--success, #2e7d32)}:host([color=info]){--pfe-broadcasted--color--text:var(--pfe-theme--color--feedback--info, #0277bd)}:host([color=default]){--pfe-broadcasted--color--text:var(--pfe-theme--color--feedback--default, #606060)}:host([circled]){--pfe-icon--color--bg:transparent;--pfe-icon--color--border:var(--pfe-theme--color--surface--border, #dfdfdf);padding:.05em}:host([circled=base]){--pfe-icon--color--bg:var(--pfe-theme--color--surface--base, #dfdfdf);--pfe-icon--color--border:transparent;--pfe-broadcasted--color--text:var(--pfe-theme--color--surface--base--text, #333)}:host([circled=lightest]){--pfe-icon--color--bg:var(--pfe-theme--color--surface--lightest, #fff);--pfe-icon--color--border:transparent;--pfe-broadcasted--color--text:var(--pfe-theme--color--surface--lightest--text, #333)}:host([circled=light]){--pfe-icon--color--bg:var(--pfe-theme--color--surface--lighter, #ececec);--pfe-icon--color--border:transparent;--pfe-broadcasted--color--text:var(--pfe-theme--color--surface--lighter--text, #333)}:host([circled=dark]){--pfe-icon--color--bg:var(--pfe-theme--color--surface--darker, #464646);--pfe-icon--color--border:transparent;--pfe-broadcasted--color--text:var(--pfe-theme--color--surface--darker--text, #fff)}:host([circled=darkest]){--pfe-icon--color--bg:var(--pfe-theme--color--surface--darkest, #131313);--pfe-icon--color--border:transparent;--pfe-broadcasted--color--text:var(--pfe-theme--color--surface--darkest--text, #fff)}:host([circled=complement]){--pfe-icon--color--bg:var(--pfe-theme--color--surface--complement, #0477a4);--pfe-icon--color--border:transparent;--pfe-broadcasted--color--text:var(--pfe-theme--color--surface--complement--text, #fff)}:host([circled=accent]){--pfe-icon--color--bg:var(--pfe-theme--color--surface--accent, #fe460d);--pfe-icon--color--border:transparent;--pfe-broadcasted--color--text:var(--pfe-theme--color--surface--accent--text, #fff)}</style><svg xmlns=\"http://www.w3.org/2000/svg\">\n  <filter id=\"color-filter\" color-interpolation-filters=\"sRGB\" x=\"0\" y=\"0\" height=\"100%\" width=\"100%\">\n    <feFlood result=\"COLOR\" />\n    <feComposite operator=\"in\" in=\"COLOR\" in2=\"SourceAlpha\" />\n  </filter>\n  <image xlink:href=\"\" width=\"100%\" height=\"100%\" filter=\"url(#color-filter)\"></image>\n</svg>`;\n  }\n\n  static get properties() {\n    return {\"icon\":{\"title\":\"Icon\",\"type\":\"string\",\"enum\":[],\"prefixed\":false},\"size\":{\"title\":\"Size\",\"type\":\"string\",\"enum\":[\"default\",\"xl\",\"lg\",\"md\",\"sm\",\"2x\",\"3x\",\"4x\"],\"default\":\"default\",\"prefixed\":false},\"color\":{\"title\":\"Color\",\"type\":\"string\",\"enum\":[\"default\",\"base\",\"compliment\",\"accent\",\"critical\",\"important\",\"moderate\",\"success\",\"info\"],\"default\":\"default\",\"prefixed\":false}};\n  }\n\n  static get slots() {\n    return {};\n  }\n  static get tag() {\n    return \"pfe-icon\";\n  }\n\n  get templateUrl() {\n    return \"pfe-icon.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-icon.scss\";\n  }\n\n  get schemaUrl() {\n    return \"pfe-icon.json\";\n  }\n\n  static get observedAttributes() {\n    return [\"icon\"];\n  }\n\n  constructor() {\n    super(PfeIcon);\n\n    this.image = this.shadowRoot.querySelector(\"svg image\");\n    this.image.addEventListener(\"load\", () => this.iconLoad());\n    this.image.addEventListener(\"error\", () => this.iconLoadError());\n  }\n\n  iconLoad() {\n    this.image.classList.remove(\"load-failed\");\n  }\n\n  iconLoadError() {\n    this.image.classList.add(\"load-failed\");\n  }\n\n  attributeChangedCallback(attr, oldValue, newValue) {\n    super.attributeChangedCallback(...arguments);\n    this.updateIcon(newValue);\n  }\n\n  updateIcon(iconName = this.getAttribute(\"icon\")) {\n    const { setName, set } = PfeIcon.getIconSet(iconName);\n\n    if (set) {\n      const { iconPath } = set.resolveIconName(iconName);\n      this.image.setAttribute(\"xlink:href\", iconPath);\n    } else {\n      // the icon set we want doesn't exist (yet?) so start listening for new icon sets\n      this._handleAddIconSet = this._createIconSetHandler(setName);\n\n      document.body.addEventListener(\n        PfeIcon.EVENTS.ADD_ICON_SET,\n        this._handleAddIconSet\n      );\n    }\n  }\n\n  _createIconSetHandler(setName) {\n    return ev => {\n      // if the set we're waiting for was added, run updateIcon again\n      if (setName === ev.detail.set.name) {\n        document.body.removeEventListener(\n          PfeIcon.EVENTS.ADD_ICON_SET,\n          this._handleAddIconSet\n        );\n        this.updateIcon();\n      }\n    };\n  }\n\n  /**\n   * Get an icon set by providing the set's name, _or_ the name of an icon from that set.\n   *\n   * @param {String} iconName the name of the set, or the name of an icon from that set.\n   * @return {PfeIconSet} the icon set\n   */\n  static getIconSet(iconName) {\n    const [setName] = iconName.split(\"-\");\n    const set = this._iconSets[setName];\n    return { setName, set };\n  }\n\n  static addIconSet(name, path, resolveIconName) {\n    if (this._iconSets[name]) {\n      throw new Error(\n        `can't add icon set ${name}; a set with that name already exists.`\n      );\n    }\n\n    this._iconSets[name] = new PfeIconSet(name, path, resolveIconName);\n\n    document.body.dispatchEvent(\n      new CustomEvent(this.EVENTS.ADD_ICON_SET, {\n        bubbles: false,\n        detail: {\n          set: this._iconSets[name]\n        }\n      })\n    );\n  }\n\n  static get EVENTS() {\n    return {\n      ADD_ICON_SET: `${this.tag}:add-icon-set`\n    };\n  }\n}\n\nPfeIcon._iconSets = {};\n\naddBuiltIns(PfeIcon);\n\nPFElement.create(PfeIcon);\n\nexport default PfeIcon;\n//# sourceMappingURL=pfe-icon.js.map\n"],"names":["PfeIconSet","[object Object]","iconName","this","_resolveIconName","name","path","resolveIconName","iconSetName","iconSetPath","exec","iconId","iconPath","PfeIcon","PFElement","version","html","properties","icon","title","type","enum","prefixed","size","default","color","slots","tag","templateUrl","styleUrl","schemaUrl","observedAttributes","super","image","shadowRoot","querySelector","addEventListener","iconLoad","iconLoadError","classList","remove","add","attr","oldValue","newValue","attributeChangedCallback","arguments","updateIcon","getAttribute","setName","set","getIconSet","setAttribute","_handleAddIconSet","_createIconSetHandler","document","body","EVENTS","ADD_ICON_SET","ev","detail","removeEventListener","split","_iconSets","Error","dispatchEvent","CustomEvent","bubbles","forEach","addIconSet","addBuiltIns","create"],"mappings":"6CAEA,MAAMA,EAIJC,gBAAgBC,GACd,OAAOC,KAAKC,iBAAiBF,EAAUC,KAAKE,KAAMF,KAAKG,MAczDL,YAAYI,EAAMC,EAAMC,GACtBJ,KAAKE,KAAOA,EACZF,KAAKG,KAAOA,EACZH,KAAKC,iBAAmBG,GAO5B,SAASA,EAAgBF,EAAMG,EAAaC,GAC1C,QAAWP,GAAY,gBAAgBQ,KAAKL,GAEtCM,KAAYH,UAAoBN,IAGtC,MAAO,CACLM,YAAAA,EACAN,SAAAA,EACAS,OAAAA,EACAC,YANkBH,KAAeE;;;;;;;;;;;;;;;;;;;;;;;;;AAmDrC,MAAME,UAAgBC,EACpBC,qBACE,MAAO,sBAGTC,WACE,MAAO,wgJASTC,wBACE,MAAO,CAACC,KAAO,CAACC,MAAQ,OAAOC,KAAO,SAASC,KAAO,GAAGC,UAAW,GAAOC,KAAO,CAACJ,MAAQ,OAAOC,KAAO,SAASC,KAAO,CAAC,UAAU,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMG,QAAU,UAAUF,UAAW,GAAOG,MAAQ,CAACN,MAAQ,QAAQC,KAAO,SAASC,KAAO,CAAC,UAAU,OAAO,aAAa,SAAS,WAAW,YAAY,WAAW,UAAU,QAAQG,QAAU,UAAUF,UAAW,IAG3XI,mBACE,MAAO,GAETC,iBACE,MAAO,WAGTC,kBACE,MAAO,gBAGTC,eACE,MAAO,gBAGTC,gBACE,MAAO,gBAGTC,gCACE,MAAO,CAAC,QAGV9B,cACE+B,MAAMnB,GAENV,KAAK8B,MAAQ9B,KAAK+B,WAAWC,cAAc,aAC3ChC,KAAK8B,MAAMG,iBAAiB,OAAQ,IAAMjC,KAAKkC,YAC/ClC,KAAK8B,MAAMG,iBAAiB,QAAS,IAAMjC,KAAKmC,iBAGlDrC,WACEE,KAAK8B,MAAMM,UAAUC,OAAO,eAG9BvC,gBACEE,KAAK8B,MAAMM,UAAUE,IAAI,eAG3BxC,yBAAyByC,EAAMC,EAAUC,GACvCZ,MAAMa,4BAA4BC,WAClC3C,KAAK4C,WAAWH,GAGlB3C,WAAWC,EAAWC,KAAK6C,aAAa,SACtC,MAAMC,QAAEA,EAAOC,IAAEA,GAAQrC,EAAQsC,WAAWjD,GAE5C,GAAIgD,EAAK,CACP,MAAMtC,SAAEA,GAAasC,EAAI3C,gBAAgBL,GACzCC,KAAK8B,MAAMmB,aAAa,aAAcxC,QAGtCT,KAAKkD,kBAAoBlD,KAAKmD,sBAAsBL,GAEpDM,SAASC,KAAKpB,iBACZvB,EAAQ4C,OAAOC,aACfvD,KAAKkD,mBAKXpD,sBAAsBgD,GACpB,OAAOU,IAEDV,IAAYU,EAAGC,OAAOV,IAAI7C,OAC5BkD,SAASC,KAAKK,oBACZhD,EAAQ4C,OAAOC,aACfvD,KAAKkD,mBAEPlD,KAAK4C,eAWX9C,kBAAkBC,GAChB,MAAO+C,GAAW/C,EAAS4D,MAAM,KAEjC,MAAO,CAAEb,QAAAA,EAASC,IADN/C,KAAK4D,UAAUd,IAI7BhD,kBAAkBI,EAAMC,EAAMC,GAC5B,GAAIJ,KAAK4D,UAAU1D,GACjB,MAAM,IAAI2D,4BACc3D,2CAI1BF,KAAK4D,UAAU1D,GAAQ,IAAIL,EAAWK,EAAMC,EAAMC,GAElDgD,SAASC,KAAKS,cACZ,IAAIC,YAAY/D,KAAKsD,OAAOC,aAAc,CACxCS,SAAS,EACTP,OAAQ,CACNV,IAAK/C,KAAK4D,UAAU1D,OAM5BoD,oBACE,MAAO,CACLC,gBAAiBvD,KAAKwB,qBAK5Bd,EAAQkD,UAAY,GAzKpB,SAAqBlD,GACnB,CACE,CACER,KAAM,MACNC,KAAM,qEAER,CACED,KAAM,KACNC,KAAM,sEAER8D,QAAQlB,GAAOrC,EAAQwD,WAAWnB,EAAI7C,KAAM6C,EAAI5C,KAAMC,IAiK1D+D,CAAYzD,GAEZC,EAAUyD,OAAO1D"}